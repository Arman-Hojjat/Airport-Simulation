/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.event.ActionEvent;//event management
import java.awt.event.ActionListener; // action listeners
import javax.swing.Timer;//timer module
import java.awt.Color;// colour management
import java.awt.Graphics;// graphics library
import java.awt.Image; // for rendering image
import java.awt.Toolkit; // for rendering image
/**
 *
 * @author arman
 */
public class DrawingArea extends javax.swing.JPanel {
        Timer t1; //the timer for updating the screen
       
        static Ball ballA;
        static boolean ballReal = false;
         Image plane; // variable for images
       
    
    public DrawingArea() { // constructor
        initComponents();
        
        plane = Toolkit.getDefaultToolkit().getImage("plane2.png");
        t1 = new Timer(50, new DrawingArea.TimerListener()); //declares a timer that fires every 50 milliseconds. When it fires, it calls the TimerListener method
        t1.start(); // start the timer
        ballA = new Ball(50,100);
    }
        @Override
    protected void paintComponent(Graphics g){
        super.paintComponent(g);
        if (ballReal == true) {
            int ballX = ballA.setBallX();
            int ballY = ballA.setBallY();
            g.drawImage(plane, ballX, ballY, this); // draw plane first
            
       // g.setColor(Color.red); // set your colour
     //   g.fillOval(ballA.setBallX(), ballA.setBallY(), 10, 10); //draw oval (x-coord, y-coord, width, height)
        // if there's no room to continue drawing the ball in the current x and y directions
        }
    }
    
    private class TimerListener implements ActionListener {
        
        @Override
        public void actionPerformed(ActionEvent ae) {
            repaint();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
